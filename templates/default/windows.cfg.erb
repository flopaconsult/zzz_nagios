# Automatically generated by Chef.

###############################################################################
# WINDOWS.CFG - SAMPLE CONFIG FILE FOR MONITORING A WINDOWS MACHINE
#
# Last Modified: 06-13-2007
#
# NOTES: This config file assumes that you are using the sample configuration
#        files that get installed with the Nagios quickstart guide.
#
###############################################################################




###############################################################################
###############################################################################
#
# HOST DEFINITIONS
#
###############################################################################
###############################################################################

# Define a host for the Windows machine we'll be monitoring
# Change the host_name, alias, and address to fit your situation

# windows server default host - added by Vali
define host {
  name                    windows-server
  use                     default-host
  check_period            24x7
  check_interval          <%= nagios_interval(nagios_attr(:default_host)[:check_interval]) %>
  retry_interval          <%= nagios_interval(nagios_attr(:default_host)[:retry_interval]) %>
  max_check_attempts      <%= nagios_attr(:default_host)[:max_check_attempts] %>
  check_command           check-host-alive
  notification_interval   <%= nagios_interval(nagios_attr(:default_host)[:notification_interval]) %>
  notification_options    d,u,r
  contact_groups          <%= nagios_attr(:default_contact_groups).join(",") %>
  register                0
  hostgroups              windows
}


<% @nodes.each do |n| -%>
define host {
  use windows-server
  address <%= n['ipaddress'] %>
  host_name <%= n['environment']['name'] %>-<%= n['hostname'] %>---<%= n['ipaddress'] %>
<% if n.run_list.roles.nil? -%>
  hostgroups all
<% else -%>
  hostgroups <%= n.run_list.roles.to_a.join(",") %>,windows
<% end -%>
}

<% end -%>

###############################################################################
###############################################################################
#
# HOST GROUP DEFINITIONS
#
###############################################################################
###############################################################################

define hostgroup {
  hostgroup_name windows
  alias windows
}

###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################

# Create a service for monitoring the version of NSCLient++ that is installed
# Change the host_name to match the name of the host you defined above   

<% unless @nodes.nil? || @nodes.empty? -%>
define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: NSClient++ Version
  check_command           check_nt_clientversion
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: Uptime
  check_command           check_nt_uptime
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: CPU Load over 5 Min 10 Min 60 Min
  check_command           check_nt_cpu_avg!5,60,95,10,60,95,60,60,95
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: Memory Usage NT
  check_command           check_nt_memuse!60!90
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: Memory Usage NRPE
  check_command           check_nrpe_memuse!60!90
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: C:\ Drive Space
  check_command           check_nt!USEDDISKSPACE!-l c -w 80 -c 90
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: W3SVC
  check_command           check_nt!SERVICESTATE!-d SHOWALL -l W3SVC
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: Explorer
  check_command           check_nt!PROCSTATE!-d SHOWALL -l explorer.exe
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: Paging File Usage
  check_command           check_nt_paging_file_usage
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: System Log Errors - last hour
  check_command           check_eventvwr_sys_errors!1
}

define service{
  use                     default-service
  hostgroup_name          windows
  service_description     WIN: Failure audits - last 5 mins
  check_command           check_nrpe_failure_audits!5
}
<% end -%>