# Nagios Service Definitions.
#
# Automatically generated by Chef.

define service {
    use                 default-service
    host_name           *
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

# monitoring service checks
define service {
    service_description Nagios
    # hostgroup_name      <%= node[:nagios][:server_role] %>
    hostgroup_name      all
    check_command       check-nagios
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

# Uncomment if you're using Munin
#define service {
#    service_description Munin Client
#    hostgroup_name      all
#    check_command       check_tcp!4949
#    use                 default-service
#}

# default checks for all hosts
# Uncomment if you're running chef-client as a daemon
#define service {
#    service_description Chef Client
#    hostgroup_name      base
#    check_command       check_chef_client
#    use                 default-service
#}

define service {
    service_description Free Space All Disks
    hostgroup_name      all,!windows
    check_command    	check_all_disks
    use                 default-service
}

define service {
    service_description Load Average
    hostgroup_name      all,!windows
    check_command       check_load
    use                 default-service
#    notes_url           /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$&rrdopts=%2Dl%200%20%2Du%201%20%2Dt%20CPU%2DLoad
    action_url          /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
}

define service {
    service_description Free Memory
    hostgroup_name      all,!windows
    check_command    	check_mem
    use                 default-service
}

define service {
    service_description SSH
    hostgroup_name      all,!windows
    check_command       check_ssh
    use                 default-service
}

define service {
    service_description Processes
    hostgroup_name      all,!windows
    check_command       check_local_procs
    use                 default-service
}

<% unless @service_hosts['monitoring'].nil? -%>
# If the monitoring host is a postfix relay, uncomment this.
#define service {
#    service_description Postfix
#    hostgroup_name      monitoring
#    check_command       check_nrpe!check_smtp
#    use                 default-service
#}

# If the monitoring host is a syslog server, uncomment this.
#define service {
#    service_description Rsyslog
#    hostgroup_name      monitoring
#    check_command       check_tcp!514
#    use                 default-service
#}

<% end -%>
<% unless @service_hosts['webserver'].nil? -%>
# basic web server http check
define service {
    service_description HTTP Processes
    hostgroup_name      webserver
    check_command       check_http
    use                 default-service
}

<% end -%>
<% unless @service_hosts['appserver'].nil? -%>
# basic check if appserver role is running unicorn
define service {
    service_description Unicorn Processes
    hostgroup_name      appserver
    check_command       check_nrpe!check_unicorn
    use                 default-service
}

define service {
    service_description Unicorn HTTP
    hostgroup_name      appserver
    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
    use                 default-service
}

<% end -%>
<% unless @service_hosts['mysql_magento'].nil? -%>
# basic check if the database_master role is a mysql server
# database_master service checks
define service {
	service_description		MySQL
	hostgroup_name			mysql_magento
	check_command			check_mysql
	use						default-service
}
<% end -%>

<% unless @service_hosts['apache2'].nil? -%>
define service {
  service_description Apache2
  hostgroup_name      apache2
  check_command       check_nrpe!check_apache2
  use                 default-service
}
<% end -%>
<% unless @service_hosts['apache2'].nil? -%>
define service {
  service_description HTTP
  hostgroup_name      apache2
  check_command       check_http
  use                 default-service
}
<% end -%>

<% unless @service_hosts['storefront'].nil? -%>
define service {
  service_description Java
  hostgroup_name      storefront
  check_command       check_nrpe!check_jsvc
  use                 default-service
}
<% end -%>
<% unless @service_hosts['storefront'].nil? -%>
define service {
  service_description HTTP
  hostgroup_name      storefront
  check_command       check_nrpe!check_jsvc!8080
  use                 default-service
}
<% end -%>

<% unless @service_hosts['commerce'].nil? -%>
define service {
  service_description Java
  hostgroup_name      commerce
  check_command       check_nrpe!check_jsvc
  use                 default-service
}
<% end -%>

<% unless @service_hosts['webservices'].nil? -%>
define service {
  service_description Java
  hostgroup_name      webservices
  check_command       check_nrpe!check_java
  use                 default-service
}
<% end -%>


<% unless @service_hosts['mysql_magento'].nil? -%>

define service {
    service_description MySQL - Time the server is running
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!uptime
    use                 default-service
}

define service {
    service_description MySQL - Time to connect to the server
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!connection-time!5!10
    use                 default-service
}

define service {
    service_description MySQL - Number of currently open connections
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!threads-connected!1000!2000
    use                 default-service
}

define service {
    service_description MySQL - Table lock contention
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!table-lock-contention
    use                 default-service
}

define service {
    service_description MySQL - Query cache hitrate
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!querycache-hitrate!80!90
    use                 default-service
}

define service {
    service_description MySQL - Usage of indices
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!index-usage!80!90
    use                 default-service
}

define service {
    service_description MySQL - Percent of temp tables created on disk
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!tmp-disk-tables!80!90
    use                 default-service
}

define service {
    service_description MySQL - Slow queries
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!slow-queries!60!90
    use                 default-service
}

define service {
    service_description MySQL - long running processes
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!long-running-procs
    use                 default-service
}

define service {
    service_description MySQL - Hit rate of the thread-cache
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!threadcache-hitrate
    use                 default-service
}

define service {
    service_description MySQL - Number of aborted connections per sec
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!connects-aborted
    use                 default-service
}

define service {
    service_description MySQL - Number of aborted connections because the client died per sec
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!clients-aborted
    use                 default-service
}

define service {
    service_description MySQL - InnoDB log waits because of a too small log buffer
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!log-waits
    use                 default-service
}

define service {
    service_description MySQL - Show tables which should be optimized
    hostgroup_name      mysql_magento
    check_command       check_mysql_master_health!table-fragmentation
    use                 default-service
}

# Other modes for check_mysql_master_health are:
#		threads-created          (Number of threads created per sec)
#		threads-running          (Number of currently running threads)
#		threads-cached           (Number of currently cached threads)
#		slave-lag                (Seconds behind master)
#		slave-io-running         (Slave io running: Yes)
#		slave-sql-running        (Slave sql running: Yes)
#		qcache-lowmem-prunes     (Query cache entries pruned because of low memory)
#		keycache-hitrate         (MyISAM key cache hitrate)
#		bufferpool-hitrate       (InnoDB buffer pool hitrate)
#		bufferpool-wait-free     (InnoDB buffer pool waits for clean page available)
#		tablecache-hitrate       (Table cache hitrate)
#		open-files               (Percent of opened files)
#		cluster-ndbd-running     (ndnd nodes are up and running)
#		sql                      (any sql command returning a single number)

<% end -%>





